clc; clear;
%% 1. Начальные данные

R0 = 0.01;  %Величина, на которую смещается объект при тактике 1
r0 = 0.01;  %Величина, на которую смещается объект при тактике 2
w0 = 2;     %Величина нормально распределённая и случайная для тактики 2
k1 = 0.8;   %Инерционность переключения тактик
k2 = 0.2;
mu = 0;     %Величина для задания нормального распределения (среднее)
sig = 0.01; %Величина для задания нормального распределения (среднеквадр.откл.)

tMax = 2000; %Количество итераций t = 0,1,2,…,

%Начальная точка поиска
x = 0;
y = 0;

M_t = 0;                %Начальная мотивация к выбору тактики M(0) = M(t)
deltaX_t = 0.0000001;   %Начальное смещение по Х (допущение, что не 0)
deltaY_t = 0.0000001;   %Начальное смещение по Y (допущение, что не 0)

%% 2. Настройка графиков

%Шрифты графика
set(0,'DefaultAxesFontSize',12,'DefaultAxesFontName','Times New Roman');
set(0,'DefaultTextFontSize',12,'DefaultTextFontName','Times New Roman'); 
%График на весь экран
figure('Units', 'normalized', 'OuterPosition', [0 0 1 1]); 

subplot(1,2,1); h = animatedline ;
%Заголовок графика
title('Траектория движения анимата в координатах x, y');
axis([0 3 -0.5 3]);
xlabel('X');
ylabel('Y'); 

subplot(1,2,2); h2 = animatedline ;
%Заголовок графика
title('Зависимость функции f(x, y) от времени');
axis([0 tMax -0.5 3]);
xlabel('t');
ylabel('f(x,y)'); 

%% 3. Алгоритм ручейника
%Получаем значение новой точки в зависимости от текущего дискретного времени t
for t = 0:tMax
     %Нормально распределенная случайная величина
     eps = normrnd(mu,sig); 
     
     %Предыдущие значения функции
     fPrev = f(x,y);
     
     %Текущие значения
     if(M_t > 0)
         %Тактика 1
         %Вычисление смещений согласно тактике
         [deltaX_t, deltaY_t] = tactic1(deltaX_t, deltaY_t, R0);
         %Задание полученных значений положения точки
         x = x + deltaX_t;
         y = y + deltaY_t;
     else
         %Тактика 2
         %Вычисление смещений согласно тактике
         [deltaX_t, deltaY_t] = tactic2(deltaX_t, deltaY_t, r0, w0);
         %Задание полученных значений положения точки
         x = x + deltaX_t;
         y = y + deltaY_t;
     end
     
     %Новые значения функции
     fCurr = f(x,y);
     
     %Изменение между прошлым и текущим положением
     deltaF_t = fCurr - fPrev;
     
     %I(t) - следующая интенсивность раздражителя
     I_t = k2 .* deltaF_t; 
     
     %M(t) - следующая мотивация к выбору тактики
     M_t = k1 .* M_t + eps + I_t; 
     
     %Добавление текущих точек на график
     addpoints(h, x, y);
     addpoints(h2, t, fCurr);
     drawnow
end